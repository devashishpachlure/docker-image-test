Below is a complete Dockerfile for installing and running Jenkins, including steps to customize the installation, pre-install plugins, and create a default admin user using a Groovy script.

Complete Dockerfile

# Use the official Jenkins LTS base image
FROM jenkins/jenkins:lts

# Switch to root user to install additional packages
USER root

# Update and install additional tools (optional)
RUN apt-get update && apt-get install -y \
    sudo \
    vim \
    curl \
    git \
    && rm -rf /var/lib/apt/lists/*

# Install Docker CLI for Docker builds within Jenkins
RUN curl -fsSL https://download.docker.com/linux/static/stable/x86_64/docker-24.0.5.tgz | tar xzvf - --strip 1 -C /usr/local/bin

# Pre-install Jenkins plugins
RUN jenkins-plugin-cli --plugins \
    git \
    workflow-aggregator \
    docker-workflow \
    blueocean \
    credentials-binding \
    pipeline-stage-view

# Copy custom initialization script to set admin credentials
COPY set-admin-user.groovy /usr/share/jenkins/ref/init.groovy.d/set-admin-user.groovy

# Expose ports for Jenkins
EXPOSE 8080 50000

# Switch back to Jenkins user
USER jenkins

# Default command to start Jenkins
ENTRYPOINT ["/usr/bin/tini", "--", "/usr/local/bin/jenkins.sh"]



Groovy Script (Create Admin User)
Save the following script as <set-admin-user.groovy> in the same directory as the Dockerfile. This script creates a default admin user with specified credentials.

import jenkins.model.*
import hudson.security.*

def instance = Jenkins.getInstance()

// Set up security realm with admin credentials
def hudsonRealm = new HudsonPrivateSecurityRealm(false)
hudsonRealm.createAccount("admin", "yourpassword")
instance.setSecurityRealm(hudsonRealm)

// Set up authorization strategy
def strategy = new FullControlOnceLoggedInAuthorizationStrategy()
strategy.setAllowAnonymousRead(false)
instance.setAuthorizationStrategy(strategy)

instance.save()


Building and Running the Docker Image

Step 1: Build the Docker Image
Run this command in the directory containing the Dockerfile and set-admin-user.groovy:

docker build -t custom-jenkins .

Step 2: Run the Jenkins Container
Start the Jenkins container:

docker run -d --name my-jenkins \
    -p 8080:8080 \
    -p 50000:50000 \
    -v jenkins_home:/var/jenkins_home \
    custom-jenkins

Step 3: Access Jenkins
Open a web browser and go to http://localhost:8080.
Log in using the credentials specified in the set-admin-user.groovy script:
Username: admin
Password: yourpassword
